% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/rctval_remove.R
\name{rctval_remove}
\alias{rctval_remove}
\title{rctval_remove}
\usage{
rctval_remove(id)
}
\arguments{
\item{id}{character, tag to prepend to the input and output id's}
}
\value{
list containing \code{ui_controller}, \code{ui_view}, and \code{srv_model}
}
\description{
Creates a collection of shiny objects to manage the removal of members
of a set of reactive values.
}
\details{
The list will contain:

\itemize{
  \item \code{ui_controller} \code{shiny::taglist} of ui elements for the controller
  \item \code{ui_view} \code{shing::taglist} of ui elements for the view
  \item \code{server_model} a function with reactive code - this function takes a \code{reactiveValues} as its arguement
}

The list returned by the factory has to be available to both the ui and the server. If not using the \code{shinyApp}
formulation, perhaps \code{global.R} could be useful.

The component \code{server_model} will be called in the server function, using the
particular \code{reactiveValue} you wish to associate with the "thing".
}

