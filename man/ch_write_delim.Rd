% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ch_write_delim.R
\name{ch_write_delim}
\alias{ch_write_delim}
\title{Creates a collection of shiny objects to wrap the \code{readr::write_delim} function.}
\usage{
ch_write_delim(id, defaults = list(delim = ","))
}
\arguments{
\item{id}{character, tag to prepend to the input and output id's}

\item{defaults}{list, default value for delimiter}
}
\value{
list containing \code{ui_controller}, \code{ui_view}, and \code{server_model}
}
\description{
The list will contain:
}
\details{
\describe{
  \item{\code{ui_controller}}{\code{shiny::taglist} of ui elements for the controller}
  \item{\code{ui_view}}{\code{shing::taglist} of ui elements for the view}
  \item{\code{server_model}}{function with reactive code}
}

The list returned by this function has to be available to both the ui and the server.
If not using the \code{shinyApp} formulation, perhaps \code{global.R} could be useful.

The list \code{ui_controller} will have members:

\describe{
 \item{\code{delim}}{\code{shiny::selectInput} used to select the delimiter character }
 \item{\code{tz_display}}{\code{shiny::selectInput used to select the timezone used to display}}
 \item{\code{tz_display_modal}}{\code{shinyBS::bsModal used for timezone help}}
 \item{\code{tz_name}}{\code{shiny::textInput used to name the file to be download}}
 \item{\code{download}}{\code{shiny::downloadButton used to launch the download}}
}

The list \code{ui_view} will have members:

\describe{
 \item{\code{data}}{\code{shiny::htmlOutput} showing the first few lines of the dataframe}
 \item{\code{text}}{\code{shiny::htmlOutput} showing the first few lines of the text file}
 \item{\code{status}}{\code{shiny::htmlOutput} showing the status of the download}
}

The function \code{server_model()} will be called from your server function.
Its arguments are:

\describe{
 \item{\code{input, output, session}}{input, output, session values passed from your server function}
 \item{\code{rctval_data, item_data}}{
   \code{shiny::reactiveValues} object, character string.
   The input dataframe will be taken from in \code{rctval_data[[item_data]]}.
 }
}
}

